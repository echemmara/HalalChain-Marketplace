name: Node.js CI/CD to Storacha

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  APP_NAME: your-app-name
  DEPLOY_PATH: './dist'
  NODE_VERSION: '20.x'
  STORACHA_ENV: 'production'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: |
        npm run build
        npm run test --if-present

    - name: Security scan
      uses: shiftleft/scan-action@v2
      with:
        output: reports/

    - name: Archive build
      uses: actions/upload-artifact@v3
      with:
        name: storacha-build
        path: |
          ${{ env.DEPLOY_PATH }}
          package.json
          package-lock.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production
    steps:
    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: storacha-build

    - name: Setup Storacha CLI
      run: |
        curl -sSL https://cli.storacha.com/install | bash
        storacha --version

    - name: Deploy to Storacha
      env:
        STORACHA_API_KEY: ${{ secrets.STORACHA_API_KEY }}
      run: |
        storacha deploy \
          --app ${{ env.APP_NAME }} \
          --env ${{ env.STORACHA_ENV }} \
          --dir ${{ env.DEPLOY_PATH }}

    - name: Run smoke test
      run: |
        curl -sSI https://${{ env.APP_NAME }}.storacha.app/health | grep '200 OK'