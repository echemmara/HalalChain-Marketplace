name: Deploy to Kubernetes

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  APP_NAME: multivendor-admin
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/multivendor-admin
  KUBE_NAMESPACE: production

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Build application
      run: |
        npm ci
        npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        push: true

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-helm@v3
      with:
        version: 'v1.29.0'

    - name: Configure Kubernetes
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/deployment.yaml -n ${{ env.KUBE_NAMESPACE }}
        kubectl apply -f kubernetes/service.yaml -n ${{ env.KUBE_NAMESPACE }}
        kubectl rollout status deployment/${{ env.APP_NAME }} -n ${{ env.KUBE_NAMESPACE }}